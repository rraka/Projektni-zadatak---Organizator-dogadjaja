package klijent;

//import static com.sun.xml.internal.fastinfoset.alphabet.BuiltInRestrictedAlphabets.table;
import dogadjaj.Dogadjaj;
import java.io.IOException;
import java.io.ObjectInputStream;
import java.io.ObjectOutputStream;
import java.net.InetAddress;
import java.net.Socket;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Calendar;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.table.DefaultTableCellRenderer;
import javax.swing.table.DefaultTableModel;
import osoba.Organizator;
import osoba.Osoba;
import poruka.Poruka;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */
/**
 *
 * @author raka
 */
public class PocetnaGUI extends javax.swing.JFrame {

    private KreirajDogadjajGUI kreirajDogadjaj;//glavniProzor
    private RadSaOsobamaGUI unosOsobe;
    private static DefaultTableModel modelTabelaDogadjaja;
    private static ArrayList<Dogadjaj> dogadjaji;
    private static final int PORT = 9000;
    private static Socket soket;
    private static ObjectOutputStream oos;
    private static ObjectInputStream ois;

    public static ObjectOutputStream getOos() {
        return oos;
    }

    public static ObjectInputStream getOis() {
        return ois;
    }

    //private PregledOsobe pregledOsobe;
    // private BrisanjeOsobe brisanjeOsobe;
    /**
     * Creates new form PocetnaForma
     */
    
    
    public PocetnaGUI() {
        try {
            initComponents();
            setVisible(true);

            InetAddress adresa = InetAddress.getByName("127.0.0.1");
            soket = new Socket(adresa, PORT);
            oos = new ObjectOutputStream(soket.getOutputStream());
            ois = new ObjectInputStream(soket.getInputStream());

//zahtjev za dogadjajima i primanje liste dogadjaja
            oos.writeObject(new Poruka(Poruka.IDPoruke.SVI_DOGADJAJI, null));
            Poruka poruka = (Poruka) ois.readObject();
            dogadjaji = (ArrayList<Dogadjaj>) poruka.getDodatak();
            modelTabelaDogadjaja = (DefaultTableModel) tabelaDogadaji.getModel();
            popuniTabeluDogadjaja(dogadjaji, tabelaDogadaji); //popunjavanje tabele dogadjaja

        } catch (Exception ex) {
            ex.printStackTrace();

        }
    }

    /*
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane1 = new javax.swing.JScrollPane();
        tabelaDogadaji = new javax.swing.JTable();
        NaslovGlavnaFormaLabela = new javax.swing.JLabel();
        NaslovTabeleGlavnaFormaLabela = new javax.swing.JLabel();
        KreirajDogadjajDugme = new javax.swing.JButton();
        ObrisiDogadjajDugme = new javax.swing.JButton();
        pokreniKampanjuButton = new javax.swing.JButton();
        unosOsobeDugme = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Organizator događaja");

        tabelaDogadaji.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null},
                {null, null, null, null, null, null}
            },
            new String [] {
                "Naziv", "Datum", "Pocetak", "Kraj", "Organizator", "Vrsta"
            }
        ));
        tabelaDogadaji.setColumnSelectionAllowed(true);
        tabelaDogadaji.getTableHeader().setReorderingAllowed(false);
        tabelaDogadaji.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tabelaDogadajiMouseClicked(evt);
            }
        });
        jScrollPane1.setViewportView(tabelaDogadaji);
        tabelaDogadaji.getColumnModel().getSelectionModel().setSelectionMode(javax.swing.ListSelectionModel.MULTIPLE_INTERVAL_SELECTION);
        if (tabelaDogadaji.getColumnModel().getColumnCount() > 0) {
            tabelaDogadaji.getColumnModel().getColumn(0).setPreferredWidth(100);
            tabelaDogadaji.getColumnModel().getColumn(1).setPreferredWidth(20);
            tabelaDogadaji.getColumnModel().getColumn(2).setPreferredWidth(20);
            tabelaDogadaji.getColumnModel().getColumn(3).setPreferredWidth(20);
            tabelaDogadaji.getColumnModel().getColumn(4).setPreferredWidth(50);
            tabelaDogadaji.getColumnModel().getColumn(5).setPreferredWidth(40);
        }

        NaslovGlavnaFormaLabela.setFont(new java.awt.Font("Tahoma", 0, 24)); // NOI18N
        NaslovGlavnaFormaLabela.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        NaslovGlavnaFormaLabela.setText("ORGANIZATOR DOGAĐAJA");

        NaslovTabeleGlavnaFormaLabela.setFont(new java.awt.Font("Tahoma", 0, 14)); // NOI18N
        NaslovTabeleGlavnaFormaLabela.setText("Događaji:");

        KreirajDogadjajDugme.setText("Kreiraj događaj");
        KreirajDogadjajDugme.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                KreirajDogadjajDugmeActionPerformed(evt);
            }
        });

        ObrisiDogadjajDugme.setText("Obriši događaj");
        ObrisiDogadjajDugme.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                ObrisiDogadjajDugmeActionPerformed(evt);
            }
        });

        pokreniKampanjuButton.setText("Pokreni  kampanju");

        unosOsobeDugme.setText("Rad sa osobama");
        unosOsobeDugme.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                unosOsobeDugmeActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(NaslovGlavnaFormaLabela, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(NaslovTabeleGlavnaFormaLabela)
                        .addGap(0, 0, Short.MAX_VALUE))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 700, Short.MAX_VALUE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(KreirajDogadjajDugme, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(ObrisiDogadjajDugme, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(pokreniKampanjuButton, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(unosOsobeDugme, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(26, 26, 26)
                .addComponent(NaslovGlavnaFormaLabela, javax.swing.GroupLayout.PREFERRED_SIZE, 23, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(25, 25, 25)
                .addComponent(NaslovTabeleGlavnaFormaLabela)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(KreirajDogadjajDugme)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(ObrisiDogadjajDugme)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(pokreniKampanjuButton)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(unosOsobeDugme))
                    .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 193, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(34, Short.MAX_VALUE))
        );

        NaslovGlavnaFormaLabela.getAccessibleContext().setAccessibleName("NaslovGlavnaFormaLabela");
        KreirajDogadjajDugme.getAccessibleContext().setAccessibleName("KreirajDogadjajDugme");
        ObrisiDogadjajDugme.getAccessibleContext().setAccessibleName("ObrisiDogadjajDugme");

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void KreirajDogadjajDugmeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_KreirajDogadjajDugmeActionPerformed
        kreirajDogadjaj = new KreirajDogadjajGUI(this);
        kreirajDogadjaj.setVisible(true);
        this.setVisible(false);

        // dispose();
    }//GEN-LAST:event_KreirajDogadjajDugmeActionPerformed

    private void unosOsobeDugmeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_unosOsobeDugmeActionPerformed
        unosOsobe = new RadSaOsobamaGUI(this);
        unosOsobe.setVisible(true);
        this.setVisible(false);
    }//GEN-LAST:event_unosOsobeDugmeActionPerformed

    private void tabelaDogadajiMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tabelaDogadajiMouseClicked

        int indeks = tabelaDogadaji.getSelectedRow();
        String nazivDogadjaja = (String) modelTabelaDogadjaja.getValueAt(indeks, 0);
        System.out.println(nazivDogadjaja);

    }//GEN-LAST:event_tabelaDogadajiMouseClicked

    private void ObrisiDogadjajDugmeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_ObrisiDogadjajDugmeActionPerformed
        try {
            int indeks = tabelaDogadaji.getSelectedRow();
            // String nazivDogadjaja = (String) modelTabelaDogadjaja.getM;
            //System.out.println(nazivDogadjaja);
            String nazivDogadjaja = (String) tabelaDogadaji.getModel().getValueAt(indeks, 0);
            System.out.println("Dogadjaj selektovan za brisanje " + nazivDogadjaja);

            oos.writeObject(new Poruka(Poruka.IDPoruke.BRISANJE_DOGADJAJA, nazivDogadjaja));//s
System.out.println("poslije slanja dogadjaja za B R I S A NJ E " );
            Poruka poruka = (Poruka) ois.readObject(); // OVDJE Z A R I B A
            System.out.println("poslije prijema P O RUKE" );
            if (poruka.getIdPoruke().equals(Poruka.IDPoruke.OK)) {                                //p
                System.out.println("usao u IF!!");
                dogadjaji = (ArrayList<Dogadjaj>) poruka.getDodatak();                         //p
                System.out.println("lista dogadjaja: " + dogadjaji);
                popuniTabeluDogadjaja(dogadjaji, tabelaDogadaji);
                JOptionPane.showMessageDialog(null, " Dogadjaj ***" + nazivDogadjaja + "*** uspjesno izbrisan!");
            } else {
                JOptionPane.showMessageDialog(null, " GRESKA!!! \nDogadjaj ***" + nazivDogadjaja + "*** nije izbrisan!");
            }
        } catch (Exception ex) {
            ex.printStackTrace();
        }
    }//GEN-LAST:event_ObrisiDogadjajDugmeActionPerformed

    public static void main(String args[]) {
        PocetnaGUI pocetna = new PocetnaGUI();

    }

    public static void popuniTabeluDogadjaja(ArrayList<Dogadjaj> dogadjaji, JTable tabelaDogadjaji) {
        DefaultTableCellRenderer centriranje = new DefaultTableCellRenderer();
        centriranje.setHorizontalAlignment(DefaultTableCellRenderer.CENTER);
        tabelaDogadjaji.getColumnModel().getColumn(1).setCellRenderer(centriranje); //centriranje datuma i vremena
        tabelaDogadjaji.getColumnModel().getColumn(2).setCellRenderer(centriranje);
        //tabelaDogadjaji.getColumnModel().getColumn(3).setCellRenderer(centriranje);

        //brisanje tabele
        int rowCount = modelTabelaDogadjaja.getRowCount();
        for (int i = rowCount - 1; i >= 0; i--) {
            modelTabelaDogadjaja.removeRow(i);

        }

        for (Dogadjaj dogadjaj : dogadjaji) {
            String nazivDogadjaja = dogadjaj.getNazivDogadjaja();
            Calendar datumDogadjaja = dogadjaj.getDatumPocetkaDogadjaja();
            Calendar vrijemePocetak = dogadjaj.getVrijemePocetkaDogadjaja();
            Calendar vrijemeKraj = dogadjaj.getVrijemeKrajaDogadjaja();

            SimpleDateFormat formatDatum = new SimpleDateFormat("dd.MM.yyyy");
            SimpleDateFormat formatVremena = new SimpleDateFormat("HH:mm");

            String formatiranDatum = formatDatum.format(datumDogadjaja.getTime());
            String formatiranPocetak = formatVremena.format(vrijemePocetak.getTime());
            String formatiranKraj = formatVremena.format(vrijemeKraj.getTime());
            Organizator organizator = dogadjaj.getOrganizatorDogadjaja();
            String vrsta = dogadjaj.getVrstaDogadjaja();
            modelTabelaDogadjaja.addRow(new Object[]{nazivDogadjaja, formatiranDatum, formatiranPocetak, formatiranKraj,
                organizator, vrsta});
        }
    }
//    public static void obrisiTabelu(){
//    int rowCount = modelTabelaDogadjaja.getRowCount();
//        for (int i = rowCount - 1; i >= 0; i--) {
//            modelTabelaDogadjaja.removeRow(i);
//
//        }
//    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton KreirajDogadjajDugme;
    private javax.swing.JLabel NaslovGlavnaFormaLabela;
    private javax.swing.JLabel NaslovTabeleGlavnaFormaLabela;
    private javax.swing.JButton ObrisiDogadjajDugme;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JButton pokreniKampanjuButton;
    private javax.swing.JTable tabelaDogadaji;
    private javax.swing.JButton unosOsobeDugme;
    // End of variables declaration//GEN-END:variables

}
